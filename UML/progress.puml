@startuml
class CDB {
    get()
    void update()
        List[Integer] add
    List[Integer] store
    List[Integer] mult
}
class BRT {
    get()
    occupy_i()
    find_first_after()
    one_clock_cycle()
       List[Bool] table
}
class FU {
    operation()
    calculateN()
    new_instruction()
    update_pile()
    move_operation_queue()
    one_clock_cycle()
        String name
    Enum type
    Integer pile_size
    Integer ss_size
    SS SS
    BRT BRT
    Integer latency
    Pile pile
    ShiftStation ss_side
    PileElement pile_side

}
enum type{
  ADD
  MULT
  STORE
  JUMP
  }

class HoldStation {
    empty()
    one_clock_cycle()
        Integer bitMux
    String destination
    Integer position
    Integer FU1
    Integer FU2
    Integer RP1
    Integer RP2
    Integer value1
    Integer value2
    String type_operation
    Integer inm
    Bool inv
    Bool casePile

}
class HS {
    freeHS()
    update()
    get()
    one_clock_cycle()
    empty_i()
    update_i()
        Integer hs_size
    List[HS] l_hs
    List[Bool] occupied
    Integer updateSS
    Integer updatePile

}
class Memory {
    put()
    get()
        Integer memory_size
    List[Integer] memory

}

class PC {
    inst_lock()
    one_clock_cycle()
    new_instruction()
        Integer multiplicity
    List[Integer] PC
    Integer pointer
    Integer last
    List[Integer] inst_blocked
    Integer programSize
    
}
class Program {
    get()
        List[Intructions] instructions
    Integer program_size
    Dict dict_names

}
class Instruction {

        String tag
    Integer r1
    Integer r2
    Integer r3
    Integer rd
    Integer rs1
    Integer inm
    String offset
    Bool BTB
    String operation
    String fu_type

}
FU "1" -> "1" BRT
HS "1" -> "1..*" HoldStation
Program "1" -> "1..*" Instruction


@enduml